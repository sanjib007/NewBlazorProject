// <auto-generated />
using System;
using L3T.Infrastructure.Helpers.DataContext.CamsDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace L3T.Infrastructure.Helpers.Migrations.CamsDataWrite
{
    [DbContext(typeof(CamsDataWriteContext))]
    [Migration("20230115110906_InitialRouterInterface")]
    partial class InitialRouterInterface
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Link3Subscriber.Link3Subscriber", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("ActiveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChangeTypeID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerStatus")
                        .HasColumnType("int");

                    b.Property<string>("EmailID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expire_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IP_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Jcon_status")
                        .HasColumnType("int");

                    b.Property<int>("JobAction")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link3_Entity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MIS_ActiveDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ONU_Serial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Onu_Lost")
                        .HasColumnType("int");

                    b.Property<int>("Onu_Recevied")
                        .HasColumnType("int");

                    b.Property<string>("PackagePlan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Start_date_new")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sub_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriberID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriberStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TerminateStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Up_date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Up_date_new")
                        .HasColumnType("datetime2");

                    b.Property<int>("Upd_stat")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Link3Subscribers");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Mikrotik.MikrotikRequestResponse", b =>
                {
                    b.Property<long>("MikrotikRequestResponseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MikrotikRequestResponseId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MethordName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouterIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MikrotikRequestResponseId");

                    b.ToTable("MikrotikRequestResponses");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Mikrotik.ResponseModel.GetMikrotikRouterInterfaceModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ActualMTU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disabled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FpRxByte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FpRxPacket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FpTxByte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FpTxPacket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2MTU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastLinkDownTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastLinkUpTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkDowns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MTU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxL2MTU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RXByte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RXDrop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RXError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RXPacket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouterIp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Running")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TXByte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TXDrop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TXError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TXPacket")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TXQueueDrop")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MikrotikRouterInterface");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Mikrotik.ResponseModel.GetMikrotikRouterUserInfoResponseModel", b =>
                {
                    b.Property<long>("MikrotikRouterUserInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MikrotikRouterUserInfoId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreationTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouterIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("disabled")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dynamic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("list")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MikrotikRouterUserInfoId");

                    b.ToTable("MikrotikRouterUserInfos");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.SystemErrorLog.SystemErrorLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ErrorDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MethodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemErrorLogs");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.SystemSetting.SystemSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("InsertedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ParamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParamValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SystemSettings");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Test.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tests");
                });
#pragma warning restore 612, 618
        }
    }
}
