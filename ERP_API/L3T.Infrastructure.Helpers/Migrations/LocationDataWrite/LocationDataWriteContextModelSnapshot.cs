// <auto-generated />
using System;
using L3T.Infrastructure.Helpers.DataContext.LocationDBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace L3T.Infrastructure.Helpers.Migrations.LocationDataWrite
{
    [DbContext(typeof(LocationDataWriteContext))]
    partial class LocationDataWriteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Location.District", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("District");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Location.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Division");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Location.Upazila", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DistrictId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("UpazilaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("Upazila");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Location.Zone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zone");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Location.District", b =>
                {
                    b.HasOne("L3T.Infrastructure.Helpers.Models.Location.Division", "Division")
                        .WithMany("District")
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Location.Upazila", b =>
                {
                    b.HasOne("L3T.Infrastructure.Helpers.Models.Location.District", "District")
                        .WithMany("Upazila")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Location.District", b =>
                {
                    b.Navigation("Upazila");
                });

            modelBuilder.Entity("L3T.Infrastructure.Helpers.Models.Location.Division", b =>
                {
                    b.Navigation("District");
                });
#pragma warning restore 612, 618
        }
    }
}
